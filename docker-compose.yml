version: '3.8'
services:
 django_project:
      build:
       context: ./django_project/
       dockerfile: Dockerfile
      container_name: moviemanager_django_app
      volumes:
       - ./django_project/src/:/app/
      ports:
       - 8005:8005
      restart: always
      tty: true
      #command: "gunicorn -b 0.0.0.0:8005 --reload movie_app.wsgi:application"
      command: sh -c "/wait && /launch_django_server"
      environment:
          - WAIT_HOSTS=postgres:5432
          - WAIT_HOSTS_TIMEOUT=30
          - WAIT_SLEEP_INTERVAL=1
          - WAIT_HOST_CONNECT_TIMEOUT=3
      depends_on:
        - postgres

 postgres:
    image: postgres:15.0
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=totolastico
      - POSTGRES_PASSWORD=4AL5DxL9!iW
      - POSTGRES_DB=movie_manager
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./db/dump_db.sql:/docker-entrypoint-initdb.d/create_tables.sql
    ports:
      - '5432:5432'


 vuesjs_project:
   build:
     context: ./vuejs_project/
     dockerfile: Dockerfile
   container_name: moviemanager_vuesjs_app
   volumes:
     - ./vuejs_project/movie_manager_app/:/app/
   command: sh -c "/launch_vuesjs_dev" #for now we launch the dev environnement
   tty: true
   ports:
      - '8100:8080'
   expose:
     - "8100" #ports for dev for now
volumes:
  pg-data: